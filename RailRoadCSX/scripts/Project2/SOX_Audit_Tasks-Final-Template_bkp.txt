echo The current working directory is `pwd`

###############################################################
###############  EDITABLE VARIABLES SECTION ###############
###############################################################

APP_NAME=peoplesoft
BAMBOO_PROJECT=DevOps
BAMBOO_PLAN=PeopleSoft

###############################################################
###############################################################

###############################################################
###############  NON-EDITABLE VARIABLES SECTION ###############
###############################################################




###############################################################
###############################################################



echo the build number is: ${bamboo.buildNumber}
echo The bamboo build working dir is: ${bamboo.build.working.directory}
echo The bamboo plan name is: ${bamboo.planName}
echo User that executed this plan: ${bamboo.ManualBuildTriggerReason.userName}
echo Bamboo Agent ID: ${bamboo.agentId}
echo Build Result Key: ${bamboo.buildResultKey}
echo Build Timestamp is: ${bamboo.buildTimeStamp}
echo Build Plan name is: ${bamboo.buildPlanName}
echo Plan name is: ${bamboo.planName}
echo Short Plan name is: ${bamboo.shortPlanName}
echo Short Job name is: ${bamboo.shortJobName}



echo "Displaying tags"
git tag --list

echo "Displaying commits"
git log | grep commit

echo --------------------------------------------------------------------------------------
echo --------------------------------------------------------------------------------------
echo --------------------------------------------------------------------------------------
echo --------------------------------------------------------------------------------------


########################################################################################
########################################################################################



if [ ${bamboo_planRepository_branchName} == master ]
 
 then
    
    
    BUILD_RESULTS=/opt/local/software/smappsController/BAMBOO_BUILDS/${BAMBOO_PROJECT}/${BAMBOO_PLAN}
    mkdir -p ${BUILD_RESULTS}/BUILD_${bamboo.buildNumber}
    
    TAG_TS=`date +%y%m%d%H%M%S`
    DATE_STR=`date`
    # TAG_NAME=${APP_NAME}_${TAG_TS}_PROD_BUILD-${bamboo.buildNumber}
    TAG_NAME=${BAMBOO_PROJECT}_${BAMBOO_PLAN}_${TAG_TS}_BUILD_${bamboo.buildNumber}
    TAG_MESSAGE="Tagging production build: BUILD-${bamboo.buildNumber} on ${DATE_STR}"
    LAST_PROD_COMMIT_FILE=/opt/shared/atlassian/bamboo/Bamboo_External_Scripts/SOX/PeopleSoft/Audit_and_Deploy/last_prod_commit.txt
    CHANGESET_FILE=${BUILD_RESULTS}/BUILD_${bamboo.buildNumber}/jira_attachment.txt
    LAST_PROD_COMMIT=`cat ${LAST_PROD_COMMIT_FILE}`
    LAST_COMMIT=`git log | grep commit | head -n +1 | awk '{print $2}'`
    echo Executing git status command in: `pwd`
    COMMIT_STATUS=`git status | grep "nothing to commit, working directory clean"`
    
    if [ "${COMMIT_STATUS}" == "nothing to commit, working directory clean" ]
     then
     
      echo "Tagging current commit as a prod build"
      git tag -a ${TAG_NAME} -m "${TAG_MESSAGE}"
      sleep 2
     
      echo "No new commits required. Comparing current commit with last (prod) commit."
      git diff ${LAST_COMMIT} ${LAST_PROD_COMMIT} --name-only > ${CHANGESET_FILE}
     
      sleep 2
      echo "Saving current commit as last prod commit for next prod build"
      echo ${LAST_COMMIT} > ${LAST_PROD_COMMIT_FILE}
     
     else
      # Commit here
      git commit -m "Tagging this prod commit with: ${TAG_NAME}"
      sleep 2
     
      git tag -a ${TAG_NAME} -m "${TAG_MESSAGE}"
      sleep 2
     
      # Updating LAST_COMMIT because a commit was required and done
      LAST_COMMIT=`git log | grep commit | head -n +1 | awk '{print $2}'`
      git diff ${LAST_COMMIT} ${LAST_PROD_COMMIT} --name-only > ${CHANGESET_FILE}
      sleep 2
     
      echo "Saving current commit as last prod commit for next prod build"
      echo ${LAST_COMMIT} > ${LAST_PROD_COMMIT_FILE}
     
    fi
    
    
    
    echo "Creating a JIRA issue and attaching the Change-Set"
    python --version
    
    echo "Calling python to upload Change-Set file to Jira issue."
    # python /home/t8054/Arunabh_sandbox/python_scripts/SOX/create-sox_issue.py ${APP_NAME} ${BAMBOO_PROJECT}_${BAMBOO_PLAN}_BUILD_${bamboo.buildNumber}.ear ${TAG_NAME} BUILD_${bamboo.buildNumber} ${CHANGESET_FILE}
    # python /home/t8054/Arunabh_sandbox/python_scripts/SOX/create-sox_issue.py ${APP_NAME} ${APP_NAME}_prod_${bamboo.buildNumber}.ear ${bamboo.buildTimeStamp} ${bamboo.buildNumber} ${CHANGESET_FILE}
    python /opt/shared/atlassian/bamboo/Bamboo_External_Scripts/SOX/PeopleSoft/Audit_and_Deploy/create-sox_issue.py ${APP_NAME} BUILD_${bamboo.buildNumber} ${bamboo.buildTimeStamp} ${bamboo.buildNumber} ${CHANGESET_FILE}
    
    # Sleep 5 seconds for xml payload to be created and used by Curl
    sleep 5
    
    # Changing to directory that contains xml payload.
    cd /opt/shared/atlassian/bamboo/Bamboo_External_Scripts/SOX/PeopleSoft/Audit_and_Deploy

    echo ----------------------------------------------
    echo ------  Calling Webservice now --------------
    echo ---------------------------------------------

    # calling prod webservice
    curl --header "Content-Type: text/xml;charset=UTF-8" --header "SOAPAction: http://www.csx.com/SmartService/Update" --data @SM_Input_new.xml http://webservices/MZ_LOC_UpdateSmartService_V1

    echo
    echo ---------------------------------------------
    echo ------- Done calling Webservice -------------
    echo ---------------------------------------------
 
 else
    echo "Skipping this step for Non-Prod builds."
    
fi

# Copying change-set file inside build results to lnx20629 (NFS mount) for use during auto deployment.
mkdir -p /opt/shared/atlassian/bamboo/Bamboo_External_Scripts/SOX/PeopleSoft/BUILD_RESULTS/BUILD_${bamboo.buildNumber}
cp -R ${CHANGESET_FILE} /opt/shared/atlassian/bamboo/Bamboo_External_Scripts/SOX/PeopleSoft/BUILD_RESULTS/BUILD_${bamboo.buildNumber}/jira_attachment.txt

# Copying change-set files to work directory
for each in `cat $CHANGESET_FILE` ;
 do
   echo ${bamboo.build.working.directory}/$each
   cp ${bamboo.build.working.directory}/$each /opt/shared/atlassian/bamboo/Bamboo_External_Scripts/SOX/PeopleSoft/peoplesoft_repo/peoplesoft/$each
   pwd
   echo "****************************************"
   echo "****************************************"
 done